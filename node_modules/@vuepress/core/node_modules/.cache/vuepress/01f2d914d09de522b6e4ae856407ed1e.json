{"remainingRequest":"d:\\MyProduct\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\MyProduct\\blog\\node_modules\\@vuepress\\theme-blog\\components\\Feed.vue?vue&type=script&lang=js&","dependencies":[{"path":"d:\\MyProduct\\blog\\node_modules\\@vuepress\\theme-blog\\components\\Feed.vue","mtime":1580703995080},{"path":"d:\\MyProduct\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580610012451},{"path":"d:\\MyProduct\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1580610013425},{"path":"d:\\MyProduct\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580610012451},{"path":"d:\\MyProduct\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1580610017989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFJzc0ljb24gfSBmcm9tICd2dWUtZmVhdGhlci1pY29ucycKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFJzc0ljb24gfSwKICBmaWx0ZXJzOiB7CiAgICBnZXRGZWVkRmlsZVBhdGgoZmVlZCkgewogICAgICBpZiAoZmVlZCA9PT0gJ3JzcycpIHJldHVybiAnL3Jzcy54bWwnCiAgICAgIGlmIChmZWVkID09PSAnYXRvbScpIHJldHVybiAnL2ZlZWQuYXRvbScKICAgICAgaWYgKGZlZWQgPT09ICdqc29uJykgcmV0dXJuICcvZmVlZC5qc29uJwogICAgICByZXR1cm4gJycKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0Rmlyc3RFbmFibGVkRmVlZCgpIHsKICAgICAgZm9yIChjb25zdCBmZWVkIGluIHRoaXMuJHNlcnZpY2UuZmVlZCkgewogICAgICAgIGNvbnN0IGlzRW5hYmxlZCA9IHRoaXMuJHNlcnZpY2UuZmVlZFtmZWVkXQogICAgICAgIGlmIChpc0VuYWJsZWQpIHJldHVybiBmZWVkCiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["Feed.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Feed.vue","sourceRoot":"node_modules/@vuepress/theme-blog/components","sourcesContent":["<template>\n  <a\n    v-if=\"getFirstEnabledFeed\"\n    class=\"feed\"\n    :href=\"getFirstEnabledFeed | getFeedFilePath\"\n  >\n    <RssIcon />\n  </a>\n</template>\n\n<script>\nimport { RssIcon } from 'vue-feather-icons'\n\nexport default {\n  components: { RssIcon },\n  filters: {\n    getFeedFilePath(feed) {\n      if (feed === 'rss') return '/rss.xml'\n      if (feed === 'atom') return '/feed.atom'\n      if (feed === 'json') return '/feed.json'\n      return ''\n    },\n  },\n  computed: {\n    getFirstEnabledFeed() {\n      for (const feed in this.$service.feed) {\n        const isEnabled = this.$service.feed[feed]\n        if (isEnabled) return feed\n      }\n      return false\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n.feed\n  display flex\n  align-items center\n  color inherit\n\n  &:hover\n    color $accentColor\n</style>\n"]}]}